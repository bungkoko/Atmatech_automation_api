{
  "stats": {
    "suites": 4,
    "tests": 11,
    "passes": 11,
    "pending": 0,
    "failures": 0,
    "start": "2023-11-11T06:06:35.875Z",
    "end": "2023-11-11T06:06:38.439Z",
    "duration": 2564,
    "testsRegistered": 11,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "65852945-ced0-4a6a-943b-5dd528ea7e5c",
      "title": "",
      "fullFile": "cypress\\e2e\\api_test.cy.js",
      "file": "cypress\\e2e\\api_test.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "083cb2d2-d764-4cd0-bb9f-828469311411",
          "title": "API Testing ATMATECH",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "23698805-d071-4fc1-bb90-5b7e27ba4da6",
              "title": "Login Endpoint",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Positif Case: Login with valid credential",
                  "fullTitle": "API Testing ATMATECH Login Endpoint Positif Case: Login with valid credential",
                  "timedOut": null,
                  "duration": 504,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'POST',\n  url: `${api_baseURL}/login`,\n  body: {\n    username: validUsername,\n    password: validPassword\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('accessToken');\n  token = response.body.accessToken;\n});",
                  "err": {},
                  "uuid": "9a9d7dea-c94c-46e2-a271-69a038e5ff45",
                  "parentUUID": "23698805-d071-4fc1-bb90-5b7e27ba4da6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Negatif Case: Login with invalid credential",
                  "fullTitle": "API Testing ATMATECH Login Endpoint Negatif Case: Login with invalid credential",
                  "timedOut": null,
                  "duration": 151,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'POST',\n  url: 'https://qc-test.atmatech.id/api/login',\n  body: {\n    username: invalidUsername,\n    password: invalidPassword\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(400);\n  expect(response.body).to.have.property('message', 'Nama pengguna atau kata sandi salah.');\n});",
                  "err": {},
                  "uuid": "bf488b3f-95ba-4766-81cf-905b3669d968",
                  "parentUUID": "23698805-d071-4fc1-bb90-5b7e27ba4da6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9a9d7dea-c94c-46e2-a271-69a038e5ff45",
                "bf488b3f-95ba-4766-81cf-905b3669d968"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 655,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "c16415f5-f041-48f8-9779-8362c05d8c2b",
              "title": "User Detail Login",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Positif Case: Get User Detail with valid access token",
                  "fullTitle": "API Testing ATMATECH User Detail Login Positif Case: Get User Detail with valid access token",
                  "timedOut": null,
                  "duration": 143,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'GET',\n  url: 'https://qc-test.atmatech.id/api/me/',\n  headers: {\n    Authorization: `Bearer ${token}`\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('_id');\n  expect(response.body).to.have.property('username');\n});",
                  "err": {},
                  "uuid": "872ddee7-1a47-47c1-8e05-9d8a0c106238",
                  "parentUUID": "c16415f5-f041-48f8-9779-8362c05d8c2b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Negative Case: Access API User detail without token",
                  "fullTitle": "API Testing ATMATECH User Detail Login Negative Case: Access API User detail without token",
                  "timedOut": null,
                  "duration": 179,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'GET',\n  url: `${api_baseURL}/me`,\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(401);\n  expect(response.body).to.have.property('message', 'Unauthorized');\n});",
                  "err": {},
                  "uuid": "c48ba9ff-de0a-47d0-8f5c-f0c8c65d39a5",
                  "parentUUID": "c16415f5-f041-48f8-9779-8362c05d8c2b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Negatif Case: Unauthorized access to Detail",
                  "fullTitle": "API Testing ATMATECH User Detail Login Negatif Case: Unauthorized access to Detail",
                  "timedOut": null,
                  "duration": 135,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'GET',\n  url: 'https://qc-test.atmatech.id/api/me/',\n  headers: {\n    Authorization: 'Bearer invalidToken'\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(401);\n  expect(response.body).to.have.property('message', 'Unauthorized');\n});",
                  "err": {},
                  "uuid": "2dfb2f43-9c63-41d1-bc73-e16abe04a7c7",
                  "parentUUID": "c16415f5-f041-48f8-9779-8362c05d8c2b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Negative Case: Access Invalid Endpoint",
                  "fullTitle": "API Testing ATMATECH User Detail Login Negative Case: Access Invalid Endpoint",
                  "timedOut": null,
                  "duration": 121,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'GET',\n  url: `${api_baseURL}/mee/`,\n  headers: {\n    Authorization: `Bearer ${token}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(404), expect(response.body).to.have.property('message', 'Not Found');\n});",
                  "err": {},
                  "uuid": "ad92616a-11fc-407f-a0cc-bd0878b653ea",
                  "parentUUID": "c16415f5-f041-48f8-9779-8362c05d8c2b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "872ddee7-1a47-47c1-8e05-9d8a0c106238",
                "c48ba9ff-de0a-47d0-8f5c-f0c8c65d39a5",
                "2dfb2f43-9c63-41d1-bc73-e16abe04a7c7",
                "ad92616a-11fc-407f-a0cc-bd0878b653ea"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 578,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "90e1ab0d-d390-41b4-8ee8-d16743354498",
              "title": "Users Endpoint",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Positive Case: Get data User based on criteria",
                  "fullTitle": "API Testing ATMATECH Users Endpoint Positive Case: Get data User based on criteria",
                  "timedOut": null,
                  "duration": 134,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const validCriteria = {\n  q: '',\n  role: 'user',\n  page: 1,\n  limit: 10\n};\ncy.request({\n  method: 'GET',\n  url: 'https://qc-test.atmatech.id/api/user/',\n  headers: {\n    Authorization: `Bearer ${token}`\n  },\n  qs: validCriteria\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('limit');\n  expect(response.body).to.have.property('page');\n  expect(response.body).to.have.property('pages');\n  expect(response.body).to.have.property('result');\n  expect(response.body).to.have.property('total');\n});",
                  "err": {},
                  "uuid": "cceb711c-507d-4aef-a288-d536ea201ea3",
                  "parentUUID": "90e1ab0d-d390-41b4-8ee8-d16743354498",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Negative Case: Access API user list without token",
                  "fullTitle": "API Testing ATMATECH Users Endpoint Negative Case: Access API user list without token",
                  "timedOut": null,
                  "duration": 140,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'GET',\n  url: `${api_baseURL}/user/`,\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(401);\n  expect(response.body).to.have.property('message', 'Unauthorized');\n});",
                  "err": {},
                  "uuid": "7ea51c21-c17c-4399-8a8f-57aa13bf2615",
                  "parentUUID": "90e1ab0d-d390-41b4-8ee8-d16743354498",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Negative Case: Access API user list with invalid token",
                  "fullTitle": "API Testing ATMATECH Users Endpoint Negative Case: Access API user list with invalid token",
                  "timedOut": null,
                  "duration": 142,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const invalidToken = 'invalidtoken';\ncy.request({\n  method: 'GET',\n  url: `${api_baseURL}/user/`,\n  headers: {\n    Authorization: `Bearer ${invalidToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(401);\n  expect(response.body).to.have.property('message', 'Unauthorized');\n});",
                  "err": {},
                  "uuid": "155c6b86-912e-4844-bb41-d8c02bc6c7f2",
                  "parentUUID": "90e1ab0d-d390-41b4-8ee8-d16743354498",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Negative Case: Use invalid parameter",
                  "fullTitle": "API Testing ATMATECH Users Endpoint Negative Case: Use invalid parameter",
                  "timedOut": null,
                  "duration": 128,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const invalidParam = {\n  q: 'invalidnama',\n  role: 'invalid_role',\n  page: 'invalid_page',\n  limit: 'invalid_limit'\n};\ncy.request({\n  method: 'GET',\n  url: `${api_baseURL}/user/`,\n  headers: {\n    Authorization: `Bearer ${token}`\n  },\n  qs: invalidParam,\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(400);\n});",
                  "err": {},
                  "uuid": "b4d29edc-346f-4bcd-9c7f-c81e212f7c54",
                  "parentUUID": "90e1ab0d-d390-41b4-8ee8-d16743354498",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Negative Case: Access Invalid Endpoint",
                  "fullTitle": "API Testing ATMATECH Users Endpoint Negative Case: Access Invalid Endpoint",
                  "timedOut": null,
                  "duration": 118,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'GET',\n  url: `${api_baseURL}/users/`,\n  headers: {\n    Authorization: `Bearer ${token}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(404), expect(response.body).to.have.property('message', 'Not Found');\n});",
                  "err": {},
                  "uuid": "10117ed4-f21f-484f-bd46-22a92a5e1cc0",
                  "parentUUID": "90e1ab0d-d390-41b4-8ee8-d16743354498",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "cceb711c-507d-4aef-a288-d536ea201ea3",
                "7ea51c21-c17c-4399-8a8f-57aa13bf2615",
                "155c6b86-912e-4844-bb41-d8c02bc6c7f2",
                "b4d29edc-346f-4bcd-9c7f-c81e212f7c54",
                "10117ed4-f21f-484f-bd46-22a92a5e1cc0"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 662,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/mochawesome-report",
        "overwrite": false,
        "html": true,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}