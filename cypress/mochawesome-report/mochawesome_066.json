{
  "stats": {
    "suites": 4,
    "tests": 7,
    "passes": 6,
    "pending": 0,
    "failures": 1,
    "start": "2023-11-11T05:36:11.499Z",
    "end": "2023-11-11T05:36:14.277Z",
    "duration": 2778,
    "testsRegistered": 7,
    "passPercent": 85.71428571428571,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "512a8cf3-8390-4b27-bd6e-15a8893c28de",
      "title": "",
      "fullFile": "cypress\\e2e\\api_test.cy.js",
      "file": "cypress\\e2e\\api_test.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6c1b3755-7848-46c0-b708-1472f1d6891c",
          "title": "API Testing ATMATECH",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "f6b0ce24-f55c-435a-8e21-e4227ec6de65",
              "title": "Login Endpoint",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Positif Case: Login with valid credential",
                  "fullTitle": "API Testing ATMATECH Login Endpoint Positif Case: Login with valid credential",
                  "timedOut": null,
                  "duration": 629,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'POST',\n  url: `${api_baseURL}/login`,\n  body: {\n    username: validUsername,\n    password: validPassword\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('accessToken');\n  token = response.body.accessToken;\n});",
                  "err": {},
                  "uuid": "f521249b-a2e8-4444-b8f6-b8e3232bcdf4",
                  "parentUUID": "f6b0ce24-f55c-435a-8e21-e4227ec6de65",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Negatif Case: Login with invalid credential",
                  "fullTitle": "API Testing ATMATECH Login Endpoint Negatif Case: Login with invalid credential",
                  "timedOut": null,
                  "duration": 174,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'POST',\n  url: 'https://qc-test.atmatech.id/api/login',\n  body: {\n    username: invalidUsername,\n    password: invalidPassword\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(400);\n  expect(response.body).to.have.property('message', 'Nama pengguna atau kata sandi salah.');\n});",
                  "err": {},
                  "uuid": "a87bc753-efd2-49c7-ad02-66a952ff93f8",
                  "parentUUID": "f6b0ce24-f55c-435a-8e21-e4227ec6de65",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f521249b-a2e8-4444-b8f6-b8e3232bcdf4",
                "a87bc753-efd2-49c7-ad02-66a952ff93f8"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 803,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "374d92d8-de1b-4e18-a99c-b3a91c708ed4",
              "title": "User Detail Login",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Positif Case: Get User Detail with valid access token",
                  "fullTitle": "API Testing ATMATECH User Detail Login Positif Case: Get User Detail with valid access token",
                  "timedOut": null,
                  "duration": 150,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'GET',\n  url: 'https://qc-test.atmatech.id/api/me/',\n  headers: {\n    Authorization: `Bearer ${token}`\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('_id');\n  expect(response.body).to.have.property('username');\n});",
                  "err": {},
                  "uuid": "328916c9-3a42-4d38-90ef-b8b92dfd622b",
                  "parentUUID": "374d92d8-de1b-4e18-a99c-b3a91c708ed4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Negative Case: Access API User detail without token",
                  "fullTitle": "API Testing ATMATECH User Detail Login Negative Case: Access API User detail without token",
                  "timedOut": null,
                  "duration": 141,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'GET',\n  url: `${api_baseURL}/me`,\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(401);\n  expect(response.body).to.have.property('message', 'Unauthorized');\n});",
                  "err": {},
                  "uuid": "2fdb94b9-2707-4ae5-b53f-161d2ccbfab5",
                  "parentUUID": "374d92d8-de1b-4e18-a99c-b3a91c708ed4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Negatif Case: Unauthorized access to Detail",
                  "fullTitle": "API Testing ATMATECH User Detail Login Negatif Case: Unauthorized access to Detail",
                  "timedOut": null,
                  "duration": 147,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'GET',\n  url: 'https://qc-test.atmatech.id/api/me/',\n  headers: {\n    Authorization: 'Bearer invalidToken'\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(401);\n  expect(response.body).to.have.property('message', 'Unauthorized');\n});",
                  "err": {},
                  "uuid": "56b20d91-17b0-4826-bba7-5cf85e2ece1d",
                  "parentUUID": "374d92d8-de1b-4e18-a99c-b3a91c708ed4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "328916c9-3a42-4d38-90ef-b8b92dfd622b",
                "2fdb94b9-2707-4ae5-b53f-161d2ccbfab5",
                "56b20d91-17b0-4826-bba7-5cf85e2ece1d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 438,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "eb75de46-ffe0-47e2-8995-1dffb0b986d7",
              "title": "Users Endpoint",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Positive Case: Get data User based on criteria",
                  "fullTitle": "API Testing ATMATECH Users Endpoint Positive Case: Get data User based on criteria",
                  "timedOut": null,
                  "duration": 203,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const validCriteria = {\n  q: '',\n  role: 'user',\n  page: 1,\n  limit: 10\n};\ncy.request({\n  method: 'GET',\n  url: 'https://qc-test.atmatech.id/api/user/',\n  headers: {\n    Authorization: `Bearer ${token}`\n  },\n  qs: validCriteria\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('limit');\n  expect(response.body).to.have.property('page');\n  expect(response.body).to.have.property('pages');\n  expect(response.body).to.have.property('result');\n  expect(response.body).to.have.property('total');\n});",
                  "err": {},
                  "uuid": "8dfce76e-1327-4d2d-808c-b64627a06346",
                  "parentUUID": "eb75de46-ffe0-47e2-8995-1dffb0b986d7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Negative Case: Access API user list without token",
                  "fullTitle": "API Testing ATMATECH Users Endpoint Negative Case: Access API user list without token",
                  "timedOut": null,
                  "duration": 775,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'GET',\n  url: `${api_baseURL}/users`,\n  failOnStatusCode: false\n}).then(response => {\n  // expect(response.status).to.eq(401);\n  expect(response.body).to.have.property('message', 'Unauthorized');\n});",
                  "err": {
                    "message": "AssertionError: expected { message: 'Not Found' } to have property 'message' of 'Unauthorized', but got 'Not Found'",
                    "estack": "AssertionError: expected { message: 'Not Found' } to have property 'message' of 'Unauthorized', but got 'Not Found'\n    at Context.eval (webpack:///./cypress/e2e/api_test.cy.js:164:46)",
                    "diff": "- 'Not Found'\n+ 'Unauthorized'\n"
                  },
                  "uuid": "2e12e1d4-8477-456a-8aa3-800a8347f7e1",
                  "parentUUID": "eb75de46-ffe0-47e2-8995-1dffb0b986d7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8dfce76e-1327-4d2d-808c-b64627a06346"
              ],
              "failures": [
                "2e12e1d4-8477-456a-8aa3-800a8347f7e1"
              ],
              "pending": [],
              "skipped": [],
              "duration": 978,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/mochawesome-report",
        "overwrite": false,
        "html": true,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}