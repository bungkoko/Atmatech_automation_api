{
  "stats": {
    "suites": 4,
    "tests": 9,
    "passes": 8,
    "pending": 0,
    "failures": 1,
    "start": "2023-11-11T05:56:06.780Z",
    "end": "2023-11-11T05:56:09.444Z",
    "duration": 2664,
    "testsRegistered": 9,
    "passPercent": 88.88888888888889,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "697162da-8cf9-47d4-b10d-26115c75a527",
      "title": "",
      "fullFile": "cypress\\e2e\\api_test.cy.js",
      "file": "cypress\\e2e\\api_test.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "1a9ff125-901f-4183-a782-c6a6c88927ce",
          "title": "API Testing ATMATECH",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "82eee089-0e82-448f-ab2d-0bd1d328e303",
              "title": "Login Endpoint",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Positif Case: Login with valid credential",
                  "fullTitle": "API Testing ATMATECH Login Endpoint Positif Case: Login with valid credential",
                  "timedOut": null,
                  "duration": 558,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'POST',\n  url: `${api_baseURL}/login`,\n  body: {\n    username: validUsername,\n    password: validPassword\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('accessToken');\n  token = response.body.accessToken;\n});",
                  "err": {},
                  "uuid": "b503e29c-eb04-4293-b529-e6d99e7b1515",
                  "parentUUID": "82eee089-0e82-448f-ab2d-0bd1d328e303",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Negatif Case: Login with invalid credential",
                  "fullTitle": "API Testing ATMATECH Login Endpoint Negatif Case: Login with invalid credential",
                  "timedOut": null,
                  "duration": 131,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'POST',\n  url: 'https://qc-test.atmatech.id/api/login',\n  body: {\n    username: invalidUsername,\n    password: invalidPassword\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(400);\n  expect(response.body).to.have.property('message', 'Nama pengguna atau kata sandi salah.');\n});",
                  "err": {},
                  "uuid": "7bd67cbc-e628-4012-9cd0-793db6d549e7",
                  "parentUUID": "82eee089-0e82-448f-ab2d-0bd1d328e303",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b503e29c-eb04-4293-b529-e6d99e7b1515",
                "7bd67cbc-e628-4012-9cd0-793db6d549e7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 689,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "d3ef5d92-c22d-4c8f-b76b-a5ddee5d43a5",
              "title": "User Detail Login",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Positif Case: Get User Detail with valid access token",
                  "fullTitle": "API Testing ATMATECH User Detail Login Positif Case: Get User Detail with valid access token",
                  "timedOut": null,
                  "duration": 141,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'GET',\n  url: 'https://qc-test.atmatech.id/api/me/',\n  headers: {\n    Authorization: `Bearer ${token}`\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('_id');\n  expect(response.body).to.have.property('username');\n});",
                  "err": {},
                  "uuid": "f1da71be-9ca6-41fe-903a-cff3f13149d5",
                  "parentUUID": "d3ef5d92-c22d-4c8f-b76b-a5ddee5d43a5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Negative Case: Access API User detail without token",
                  "fullTitle": "API Testing ATMATECH User Detail Login Negative Case: Access API User detail without token",
                  "timedOut": null,
                  "duration": 130,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'GET',\n  url: `${api_baseURL}/me`,\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(401);\n  expect(response.body).to.have.property('message', 'Unauthorized');\n});",
                  "err": {},
                  "uuid": "63c62986-4e1f-469c-89a4-60ae418842d4",
                  "parentUUID": "d3ef5d92-c22d-4c8f-b76b-a5ddee5d43a5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Negatif Case: Unauthorized access to Detail",
                  "fullTitle": "API Testing ATMATECH User Detail Login Negatif Case: Unauthorized access to Detail",
                  "timedOut": null,
                  "duration": 149,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'GET',\n  url: 'https://qc-test.atmatech.id/api/me/',\n  headers: {\n    Authorization: 'Bearer invalidToken'\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(401);\n  expect(response.body).to.have.property('message', 'Unauthorized');\n});",
                  "err": {},
                  "uuid": "eaec17a0-7826-47e9-a6bc-d5ac82df0089",
                  "parentUUID": "d3ef5d92-c22d-4c8f-b76b-a5ddee5d43a5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f1da71be-9ca6-41fe-903a-cff3f13149d5",
                "63c62986-4e1f-469c-89a4-60ae418842d4",
                "eaec17a0-7826-47e9-a6bc-d5ac82df0089"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 420,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "1b205642-b666-49a4-86b9-a870d3f3c242",
              "title": "Users Endpoint",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Positive Case: Get data User based on criteria",
                  "fullTitle": "API Testing ATMATECH Users Endpoint Positive Case: Get data User based on criteria",
                  "timedOut": null,
                  "duration": 160,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const validCriteria = {\n  q: '',\n  role: 'user',\n  page: 1,\n  limit: 10\n};\ncy.request({\n  method: 'GET',\n  url: 'https://qc-test.atmatech.id/api/user/',\n  headers: {\n    Authorization: `Bearer ${token}`\n  },\n  qs: validCriteria\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('limit');\n  expect(response.body).to.have.property('page');\n  expect(response.body).to.have.property('pages');\n  expect(response.body).to.have.property('result');\n  expect(response.body).to.have.property('total');\n});",
                  "err": {},
                  "uuid": "30af053a-04fe-44bf-8bf7-53a937ef74df",
                  "parentUUID": "1b205642-b666-49a4-86b9-a870d3f3c242",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Negative Case: Access API user list without token",
                  "fullTitle": "API Testing ATMATECH Users Endpoint Negative Case: Access API user list without token",
                  "timedOut": null,
                  "duration": 117,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'GET',\n  url: `${api_baseURL}/user/`,\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(401);\n  expect(response.body).to.have.property('message', 'Unauthorized');\n});",
                  "err": {},
                  "uuid": "1ec7329a-5710-4b6f-9152-41bc09de3b61",
                  "parentUUID": "1b205642-b666-49a4-86b9-a870d3f3c242",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Negative Case: Access API user list with invalid token",
                  "fullTitle": "API Testing ATMATECH Users Endpoint Negative Case: Access API user list with invalid token",
                  "timedOut": null,
                  "duration": 151,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const invalidToken = 'invalidtoken';\ncy.request({\n  method: 'GET',\n  url: `${api_baseURL}/user/`,\n  headers: {\n    Authorization: `Bearer ${invalidToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(401);\n  expect(response.body).to.have.property('message', 'Unauthorized');\n});",
                  "err": {},
                  "uuid": "e9cf3b48-d170-416b-88ef-2f568e73ee86",
                  "parentUUID": "1b205642-b666-49a4-86b9-a870d3f3c242",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Negative Case: Use invalid parameter",
                  "fullTitle": "API Testing ATMATECH Users Endpoint Negative Case: Use invalid parameter",
                  "timedOut": null,
                  "duration": 529,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const invalidParam = {\n  q: 'invalidnama',\n  role: 'invalid_role',\n  page: 'invalid_page',\n  limit: 'invalid_limit'\n};\ncy.request({\n  method: 'GET',\n  url: `${api_baseURL}/user/`,\n  headers: {\n    Authorization: `Bearer ${token}`\n  },\n  qs: invalidParameters,\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(400);\n});",
                  "err": {
                    "message": "ReferenceError: invalidParameters is not defined",
                    "estack": "ReferenceError: invalidParameters is not defined\n    at Context.eval (webpack:///./cypress/e2e/api_test.cy.js:198:19)",
                    "diff": null
                  },
                  "uuid": "e123fff0-f9f9-4c1e-996e-a0be8ffd8f3d",
                  "parentUUID": "1b205642-b666-49a4-86b9-a870d3f3c242",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "30af053a-04fe-44bf-8bf7-53a937ef74df",
                "1ec7329a-5710-4b6f-9152-41bc09de3b61",
                "e9cf3b48-d170-416b-88ef-2f568e73ee86"
              ],
              "failures": [
                "e123fff0-f9f9-4c1e-996e-a0be8ffd8f3d"
              ],
              "pending": [],
              "skipped": [],
              "duration": 957,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/mochawesome-report",
        "overwrite": false,
        "html": true,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}