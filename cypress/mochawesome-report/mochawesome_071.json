{
  "stats": {
    "suites": 4,
    "tests": 10,
    "passes": 10,
    "pending": 0,
    "failures": 0,
    "start": "2023-11-11T06:05:17.094Z",
    "end": "2023-11-11T06:05:19.825Z",
    "duration": 2731,
    "testsRegistered": 10,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "70cd6d97-1256-46d2-b474-6806961cfce9",
      "title": "",
      "fullFile": "cypress\\e2e\\api_test.cy.js",
      "file": "cypress\\e2e\\api_test.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "0ded0665-7d62-43d0-b665-06528ed6cf68",
          "title": "API Testing ATMATECH",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "362aa73e-0fcb-4976-a370-7c4ca12a9896",
              "title": "Login Endpoint",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Positif Case: Login with valid credential",
                  "fullTitle": "API Testing ATMATECH Login Endpoint Positif Case: Login with valid credential",
                  "timedOut": null,
                  "duration": 531,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'POST',\n  url: `${api_baseURL}/login`,\n  body: {\n    username: validUsername,\n    password: validPassword\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('accessToken');\n  token = response.body.accessToken;\n});",
                  "err": {},
                  "uuid": "6905dbf8-94dd-4cad-9a69-c16684bb5ffe",
                  "parentUUID": "362aa73e-0fcb-4976-a370-7c4ca12a9896",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Negatif Case: Login with invalid credential",
                  "fullTitle": "API Testing ATMATECH Login Endpoint Negatif Case: Login with invalid credential",
                  "timedOut": null,
                  "duration": 179,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'POST',\n  url: 'https://qc-test.atmatech.id/api/login',\n  body: {\n    username: invalidUsername,\n    password: invalidPassword\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(400);\n  expect(response.body).to.have.property('message', 'Nama pengguna atau kata sandi salah.');\n});",
                  "err": {},
                  "uuid": "af654974-fd80-4c46-bb2d-aff7c6299276",
                  "parentUUID": "362aa73e-0fcb-4976-a370-7c4ca12a9896",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6905dbf8-94dd-4cad-9a69-c16684bb5ffe",
                "af654974-fd80-4c46-bb2d-aff7c6299276"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 710,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "d3cadd05-9c6f-4773-9274-5626ae32198a",
              "title": "User Detail Login",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Positif Case: Get User Detail with valid access token",
                  "fullTitle": "API Testing ATMATECH User Detail Login Positif Case: Get User Detail with valid access token",
                  "timedOut": null,
                  "duration": 131,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'GET',\n  url: 'https://qc-test.atmatech.id/api/me/',\n  headers: {\n    Authorization: `Bearer ${token}`\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('_id');\n  expect(response.body).to.have.property('username');\n});",
                  "err": {},
                  "uuid": "1bfc3d1f-4b65-42e7-b47f-9bc25359ffcd",
                  "parentUUID": "d3cadd05-9c6f-4773-9274-5626ae32198a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Negative Case: Access API User detail without token",
                  "fullTitle": "API Testing ATMATECH User Detail Login Negative Case: Access API User detail without token",
                  "timedOut": null,
                  "duration": 127,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'GET',\n  url: `${api_baseURL}/me`,\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(401);\n  expect(response.body).to.have.property('message', 'Unauthorized');\n});",
                  "err": {},
                  "uuid": "bba48e7f-a70e-4544-b114-6f9007cfd171",
                  "parentUUID": "d3cadd05-9c6f-4773-9274-5626ae32198a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Negatif Case: Unauthorized access to Detail",
                  "fullTitle": "API Testing ATMATECH User Detail Login Negatif Case: Unauthorized access to Detail",
                  "timedOut": null,
                  "duration": 123,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'GET',\n  url: 'https://qc-test.atmatech.id/api/me/',\n  headers: {\n    Authorization: 'Bearer invalidToken'\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(401);\n  expect(response.body).to.have.property('message', 'Unauthorized');\n});",
                  "err": {},
                  "uuid": "6fa77db0-88dd-4401-8e8d-99145891d920",
                  "parentUUID": "d3cadd05-9c6f-4773-9274-5626ae32198a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1bfc3d1f-4b65-42e7-b47f-9bc25359ffcd",
                "bba48e7f-a70e-4544-b114-6f9007cfd171",
                "6fa77db0-88dd-4401-8e8d-99145891d920"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 381,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "fc02e9ed-5018-43da-812e-d4ca7b2c84ce",
              "title": "Users Endpoint",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Positive Case: Get data User based on criteria",
                  "fullTitle": "API Testing ATMATECH Users Endpoint Positive Case: Get data User based on criteria",
                  "timedOut": null,
                  "duration": 145,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const validCriteria = {\n  q: '',\n  role: 'user',\n  page: 1,\n  limit: 10\n};\ncy.request({\n  method: 'GET',\n  url: 'https://qc-test.atmatech.id/api/user/',\n  headers: {\n    Authorization: `Bearer ${token}`\n  },\n  qs: validCriteria\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('limit');\n  expect(response.body).to.have.property('page');\n  expect(response.body).to.have.property('pages');\n  expect(response.body).to.have.property('result');\n  expect(response.body).to.have.property('total');\n});",
                  "err": {},
                  "uuid": "69f95d47-94f4-44d1-ade6-7f085be6dc60",
                  "parentUUID": "fc02e9ed-5018-43da-812e-d4ca7b2c84ce",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Negative Case: Access API user list without token",
                  "fullTitle": "API Testing ATMATECH Users Endpoint Negative Case: Access API user list without token",
                  "timedOut": null,
                  "duration": 136,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'GET',\n  url: `${api_baseURL}/user/`,\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(401);\n  expect(response.body).to.have.property('message', 'Unauthorized');\n});",
                  "err": {},
                  "uuid": "a8f5bb92-c03f-4438-b215-944e23348f19",
                  "parentUUID": "fc02e9ed-5018-43da-812e-d4ca7b2c84ce",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Negative Case: Access API user list with invalid token",
                  "fullTitle": "API Testing ATMATECH Users Endpoint Negative Case: Access API user list with invalid token",
                  "timedOut": null,
                  "duration": 470,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const invalidToken = 'invalidtoken';\ncy.request({\n  method: 'GET',\n  url: `${api_baseURL}/user/`,\n  headers: {\n    Authorization: `Bearer ${invalidToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(401);\n  expect(response.body).to.have.property('message', 'Unauthorized');\n});",
                  "err": {},
                  "uuid": "ca3f5dbe-71e9-4222-b728-d8b954b496ef",
                  "parentUUID": "fc02e9ed-5018-43da-812e-d4ca7b2c84ce",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Negative Case: Use invalid parameter",
                  "fullTitle": "API Testing ATMATECH Users Endpoint Negative Case: Use invalid parameter",
                  "timedOut": null,
                  "duration": 114,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const invalidParam = {\n  q: 'invalidnama',\n  role: 'invalid_role',\n  page: 'invalid_page',\n  limit: 'invalid_limit'\n};\ncy.request({\n  method: 'GET',\n  url: `${api_baseURL}/user/`,\n  headers: {\n    Authorization: `Bearer ${token}`\n  },\n  qs: invalidParam,\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(400);\n});",
                  "err": {},
                  "uuid": "4dbaab9d-760f-483f-b54c-c1a121f721da",
                  "parentUUID": "fc02e9ed-5018-43da-812e-d4ca7b2c84ce",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Negative Case: Access Invalid Endpoint",
                  "fullTitle": "API Testing ATMATECH Users Endpoint Negative Case: Access Invalid Endpoint",
                  "timedOut": null,
                  "duration": 122,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'GET',\n  url: `${api_baseURL}/users/`,\n  headers: {\n    Authorization: `Bearer ${token}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(404), expect(response.body).to.have.property('message', 'Not Found');\n});",
                  "err": {},
                  "uuid": "27de5620-70cc-4b0d-b5c8-db1796cbf1d8",
                  "parentUUID": "fc02e9ed-5018-43da-812e-d4ca7b2c84ce",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "69f95d47-94f4-44d1-ade6-7f085be6dc60",
                "a8f5bb92-c03f-4438-b215-944e23348f19",
                "ca3f5dbe-71e9-4222-b728-d8b954b496ef",
                "4dbaab9d-760f-483f-b54c-c1a121f721da",
                "27de5620-70cc-4b0d-b5c8-db1796cbf1d8"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 987,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/mochawesome-report",
        "overwrite": false,
        "html": true,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}